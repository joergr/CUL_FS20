#/bin/sh
NODE_EXEC=/usr/local/bin/node
NODE_ENV="production"
NODE_APP='app.js'
APP_DIR='/home/pi/CUL_FS20';
APP_USER=pi
PID_FILE=$APP_DIR/app.pid
LOG_FILE=$APP_DIR/app.log
CONFIG_DIR=$APP_DIR
###############
# To install copy this file to /etc/init.d/CUL_FS20 without extension.
# chmod 755 and chown root:root.
# To run on startup execute: update-rc.d CUL_FS20 defaults
#
# Thanks to https://github.com/chovy/node-startup


# REDHAT chkconfig header

# chkconfig: - 58 74
# description: node-app is the script for starting CUL_FS20 app on boot.
### BEGIN INIT INFO
# Provides: node
# Required-Start:    $network $remote_fs $local_fs
# Required-Stop:     $network $remote_fs $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: start and stop CUL_FS20
# Description: Node process for app
### END INIT INFO

cd /
LC_ALL=POSIX
export LC_ALL

case "$1" in
	start)
		if [ -f $PID_FILE ]
		then
			if [ -z "`ps -ef | grep $PID | grep -v grep`" ]
			then
				rm $PID_FILE;
				echo "Starting CUL_FS20..."
				su $APP_USER NODE_ENV=$NODE_ENV $NODE_EXEC $APP_DIR/$NODE_APP  1>$LOG_FILE 2>&1 &
				echo $! > $PID_FILE;
			else

			fi
			echo "$PID_FILE exists, process is already running or crashed"
		else
			echo "Starting CUL_FS20..."
			su $APP_USER NODE_ENV=$NODE_ENV $NODE_EXEC $APP_DIR/$NODE_APP  1>$LOG_FILE 2>&1 &
			echo $! > $PID_FILE;
		fi
		;;

	stop)
		if [ ! -f $PID_FILE ]
		then
			echo "$PID_FILE does not exist, process is not running"
		else
			echo "Stopping $APP_DIR/$NODE_APP ..."
		echo "Killing `cat $PID_FILE`"
		kill `cat $PID_FILE`;
		rm $PID_FILE;
			echo "CUL_FS20 stopped"
		fi
		;;

	restart)
		if [ ! -f $PID_FILE ]
		then
			echo "$PID_FILE does not exist, process is not running"
		else
			echo "Restarting $APP_DIR/$NODE_APP ..."
			echo "Killing `cat $PID_FILE`"
			kill `cat $PID_FILE`;
			rm $PID_FILE;
			su $APP_USER NODE_ENV=$NODE_ENV $NODE_EXEC $APP_DIR/$NODE_APP  1>$LOG_FILE 2>&1 &
			echo $! > $PID_FILE;
			echo "CUL_FS20 restarted"
		fi
		;;

	status)
		if [ -f $PID_FILE ]
		then
			PID=`cat $PID_FILE`
			if [ -z "`ps -ef | grep $PID | grep -v grep`" ]
			then
				echo "CUL_FS20 app stopped but pid file exists"
			else
				echo "CUL_FS20 app running with pid $PID"

			fi
		else
			echo "CUL_FS20 app stopped"
		fi
		;;

	*)
		echo "Usage: /etc/init.d/CUL_FS20 {start|stop|restart|status}"
	;;
esac

